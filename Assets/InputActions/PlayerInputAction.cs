//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputActions/PlayerInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputAction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputAction"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""2e87e5d0-2918-4497-8664-d1d488cc902b"",
            ""actions"": [
                {
                    ""name"": ""Interact"",
                    ""type"": ""Value"",
                    ""id"": ""ebcdc1d4-416a-45c5-8e72-89171e1c1ed7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Test"",
                    ""type"": ""Value"",
                    ""id"": ""cfda0737-10ff-406a-ad7b-82250e306a1c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""d498699c-a51b-466e-9a89-794dd4f9e806"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""90e6f141-117a-48eb-919a-a068bf50f070"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""8864e5b8-2794-4ca3-a842-962d9a627db4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Torch"",
                    ""type"": ""Button"",
                    ""id"": ""ecdbccac-f573-46b1-9f2f-5727fe03c366"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4a84af89-d297-4d3a-84aa-a9ed4bd29c2b"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c08c6808-9fd7-4eae-a62b-3a1f2efd6ac6"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72e87597-fafa-4563-9c0d-54dd2a0d347f"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68ae6c9e-2224-4357-abd3-1a167ecf24d3"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0315579-e797-480c-a0e3-4964ccda0ccd"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Torch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c14969df-614c-45d0-88a3-73583e6cbaa1"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Test"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Puzzle"",
            ""id"": ""12b9db02-850c-41b9-8690-fe91cfd095d6"",
            ""actions"": [
                {
                    ""name"": ""Number_1"",
                    ""type"": ""Button"",
                    ""id"": ""c9f3089c-35b6-43c0-b6f5-43da276f9bd8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Number_2"",
                    ""type"": ""Button"",
                    ""id"": ""7432aa0f-a900-47c4-8dea-c48b84328c23"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Number_0"",
                    ""type"": ""Button"",
                    ""id"": ""33ca0731-e313-4449-8cf0-950cbbc46f1e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Number_9"",
                    ""type"": ""Button"",
                    ""id"": ""bdd51f90-caba-45b1-9436-f9b8dd5b9821"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Number_8"",
                    ""type"": ""Button"",
                    ""id"": ""72075f66-84b5-4ebe-a50e-388e203a89e2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Number_7"",
                    ""type"": ""Button"",
                    ""id"": ""d9af29ac-c218-4ce8-8843-08a4f9e0a97b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Number_6"",
                    ""type"": ""Button"",
                    ""id"": ""3400ab5f-8a88-459d-b407-d8a14946bba3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Number_5"",
                    ""type"": ""Button"",
                    ""id"": ""046bb773-64a6-418d-9023-8256e9599126"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Number_4"",
                    ""type"": ""Button"",
                    ""id"": ""578a3fff-a196-462d-a4af-307347633404"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Number_3"",
                    ""type"": ""Button"",
                    ""id"": ""697c1e86-06b0-4424-a9d8-c8c7625f545c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Q"",
                    ""type"": ""Button"",
                    ""id"": ""68f1d401-f76b-47b2-a25f-2a9965270ef0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""W"",
                    ""type"": ""Button"",
                    ""id"": ""f271ceb5-679a-45e4-84fd-b793d3a26770"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c126653d-7ea2-44f8-b918-e84cc9859247"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Number_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3334f5a8-d364-480f-ba02-86c21dbe9581"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Q"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94836d22-d5f8-4080-b14c-397fff81a728"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""W"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a07953be-720b-4a2e-a1d5-0f06aa7e30d8"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Number_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""905ae8c3-533b-4e90-a430-e255200d09e9"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Number_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57db852a-c517-4170-b7da-5f8a86d7382b"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Number_4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4eea6f81-c77c-40d8-84fe-70ee27ff5ead"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Number_5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b36bdd6-fc34-4939-8f47-cd06477819cb"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Number_6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""135925c5-23b4-436f-b19c-5dee56a1d2df"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Number_7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0bd05ced-4377-4d27-a748-19d90e2d3da9"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Number_8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8711507b-3d2f-4042-842a-9abe99063d35"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Number_9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d59dd1b-e8f8-433d-982a-e77ac9788f1b"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Number_0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_Test = m_Player.FindAction("Test", throwIfNotFound: true);
        m_Player_Reload = m_Player.FindAction("Reload", throwIfNotFound: true);
        m_Player_Inventory = m_Player.FindAction("Inventory", throwIfNotFound: true);
        m_Player_Escape = m_Player.FindAction("Escape", throwIfNotFound: true);
        m_Player_Torch = m_Player.FindAction("Torch", throwIfNotFound: true);
        // Puzzle
        m_Puzzle = asset.FindActionMap("Puzzle", throwIfNotFound: true);
        m_Puzzle_Number_1 = m_Puzzle.FindAction("Number_1", throwIfNotFound: true);
        m_Puzzle_Number_2 = m_Puzzle.FindAction("Number_2", throwIfNotFound: true);
        m_Puzzle_Number_0 = m_Puzzle.FindAction("Number_0", throwIfNotFound: true);
        m_Puzzle_Number_9 = m_Puzzle.FindAction("Number_9", throwIfNotFound: true);
        m_Puzzle_Number_8 = m_Puzzle.FindAction("Number_8", throwIfNotFound: true);
        m_Puzzle_Number_7 = m_Puzzle.FindAction("Number_7", throwIfNotFound: true);
        m_Puzzle_Number_6 = m_Puzzle.FindAction("Number_6", throwIfNotFound: true);
        m_Puzzle_Number_5 = m_Puzzle.FindAction("Number_5", throwIfNotFound: true);
        m_Puzzle_Number_4 = m_Puzzle.FindAction("Number_4", throwIfNotFound: true);
        m_Puzzle_Number_3 = m_Puzzle.FindAction("Number_3", throwIfNotFound: true);
        m_Puzzle_Q = m_Puzzle.FindAction("Q", throwIfNotFound: true);
        m_Puzzle_W = m_Puzzle.FindAction("W", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_Test;
    private readonly InputAction m_Player_Reload;
    private readonly InputAction m_Player_Inventory;
    private readonly InputAction m_Player_Escape;
    private readonly InputAction m_Player_Torch;
    public struct PlayerActions
    {
        private @PlayerInputAction m_Wrapper;
        public PlayerActions(@PlayerInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @Test => m_Wrapper.m_Player_Test;
        public InputAction @Reload => m_Wrapper.m_Player_Reload;
        public InputAction @Inventory => m_Wrapper.m_Player_Inventory;
        public InputAction @Escape => m_Wrapper.m_Player_Escape;
        public InputAction @Torch => m_Wrapper.m_Player_Torch;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @Test.started += instance.OnTest;
            @Test.performed += instance.OnTest;
            @Test.canceled += instance.OnTest;
            @Reload.started += instance.OnReload;
            @Reload.performed += instance.OnReload;
            @Reload.canceled += instance.OnReload;
            @Inventory.started += instance.OnInventory;
            @Inventory.performed += instance.OnInventory;
            @Inventory.canceled += instance.OnInventory;
            @Escape.started += instance.OnEscape;
            @Escape.performed += instance.OnEscape;
            @Escape.canceled += instance.OnEscape;
            @Torch.started += instance.OnTorch;
            @Torch.performed += instance.OnTorch;
            @Torch.canceled += instance.OnTorch;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @Test.started -= instance.OnTest;
            @Test.performed -= instance.OnTest;
            @Test.canceled -= instance.OnTest;
            @Reload.started -= instance.OnReload;
            @Reload.performed -= instance.OnReload;
            @Reload.canceled -= instance.OnReload;
            @Inventory.started -= instance.OnInventory;
            @Inventory.performed -= instance.OnInventory;
            @Inventory.canceled -= instance.OnInventory;
            @Escape.started -= instance.OnEscape;
            @Escape.performed -= instance.OnEscape;
            @Escape.canceled -= instance.OnEscape;
            @Torch.started -= instance.OnTorch;
            @Torch.performed -= instance.OnTorch;
            @Torch.canceled -= instance.OnTorch;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Puzzle
    private readonly InputActionMap m_Puzzle;
    private List<IPuzzleActions> m_PuzzleActionsCallbackInterfaces = new List<IPuzzleActions>();
    private readonly InputAction m_Puzzle_Number_1;
    private readonly InputAction m_Puzzle_Number_2;
    private readonly InputAction m_Puzzle_Number_0;
    private readonly InputAction m_Puzzle_Number_9;
    private readonly InputAction m_Puzzle_Number_8;
    private readonly InputAction m_Puzzle_Number_7;
    private readonly InputAction m_Puzzle_Number_6;
    private readonly InputAction m_Puzzle_Number_5;
    private readonly InputAction m_Puzzle_Number_4;
    private readonly InputAction m_Puzzle_Number_3;
    private readonly InputAction m_Puzzle_Q;
    private readonly InputAction m_Puzzle_W;
    public struct PuzzleActions
    {
        private @PlayerInputAction m_Wrapper;
        public PuzzleActions(@PlayerInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Number_1 => m_Wrapper.m_Puzzle_Number_1;
        public InputAction @Number_2 => m_Wrapper.m_Puzzle_Number_2;
        public InputAction @Number_0 => m_Wrapper.m_Puzzle_Number_0;
        public InputAction @Number_9 => m_Wrapper.m_Puzzle_Number_9;
        public InputAction @Number_8 => m_Wrapper.m_Puzzle_Number_8;
        public InputAction @Number_7 => m_Wrapper.m_Puzzle_Number_7;
        public InputAction @Number_6 => m_Wrapper.m_Puzzle_Number_6;
        public InputAction @Number_5 => m_Wrapper.m_Puzzle_Number_5;
        public InputAction @Number_4 => m_Wrapper.m_Puzzle_Number_4;
        public InputAction @Number_3 => m_Wrapper.m_Puzzle_Number_3;
        public InputAction @Q => m_Wrapper.m_Puzzle_Q;
        public InputAction @W => m_Wrapper.m_Puzzle_W;
        public InputActionMap Get() { return m_Wrapper.m_Puzzle; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PuzzleActions set) { return set.Get(); }
        public void AddCallbacks(IPuzzleActions instance)
        {
            if (instance == null || m_Wrapper.m_PuzzleActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PuzzleActionsCallbackInterfaces.Add(instance);
            @Number_1.started += instance.OnNumber_1;
            @Number_1.performed += instance.OnNumber_1;
            @Number_1.canceled += instance.OnNumber_1;
            @Number_2.started += instance.OnNumber_2;
            @Number_2.performed += instance.OnNumber_2;
            @Number_2.canceled += instance.OnNumber_2;
            @Number_0.started += instance.OnNumber_0;
            @Number_0.performed += instance.OnNumber_0;
            @Number_0.canceled += instance.OnNumber_0;
            @Number_9.started += instance.OnNumber_9;
            @Number_9.performed += instance.OnNumber_9;
            @Number_9.canceled += instance.OnNumber_9;
            @Number_8.started += instance.OnNumber_8;
            @Number_8.performed += instance.OnNumber_8;
            @Number_8.canceled += instance.OnNumber_8;
            @Number_7.started += instance.OnNumber_7;
            @Number_7.performed += instance.OnNumber_7;
            @Number_7.canceled += instance.OnNumber_7;
            @Number_6.started += instance.OnNumber_6;
            @Number_6.performed += instance.OnNumber_6;
            @Number_6.canceled += instance.OnNumber_6;
            @Number_5.started += instance.OnNumber_5;
            @Number_5.performed += instance.OnNumber_5;
            @Number_5.canceled += instance.OnNumber_5;
            @Number_4.started += instance.OnNumber_4;
            @Number_4.performed += instance.OnNumber_4;
            @Number_4.canceled += instance.OnNumber_4;
            @Number_3.started += instance.OnNumber_3;
            @Number_3.performed += instance.OnNumber_3;
            @Number_3.canceled += instance.OnNumber_3;
            @Q.started += instance.OnQ;
            @Q.performed += instance.OnQ;
            @Q.canceled += instance.OnQ;
            @W.started += instance.OnW;
            @W.performed += instance.OnW;
            @W.canceled += instance.OnW;
        }

        private void UnregisterCallbacks(IPuzzleActions instance)
        {
            @Number_1.started -= instance.OnNumber_1;
            @Number_1.performed -= instance.OnNumber_1;
            @Number_1.canceled -= instance.OnNumber_1;
            @Number_2.started -= instance.OnNumber_2;
            @Number_2.performed -= instance.OnNumber_2;
            @Number_2.canceled -= instance.OnNumber_2;
            @Number_0.started -= instance.OnNumber_0;
            @Number_0.performed -= instance.OnNumber_0;
            @Number_0.canceled -= instance.OnNumber_0;
            @Number_9.started -= instance.OnNumber_9;
            @Number_9.performed -= instance.OnNumber_9;
            @Number_9.canceled -= instance.OnNumber_9;
            @Number_8.started -= instance.OnNumber_8;
            @Number_8.performed -= instance.OnNumber_8;
            @Number_8.canceled -= instance.OnNumber_8;
            @Number_7.started -= instance.OnNumber_7;
            @Number_7.performed -= instance.OnNumber_7;
            @Number_7.canceled -= instance.OnNumber_7;
            @Number_6.started -= instance.OnNumber_6;
            @Number_6.performed -= instance.OnNumber_6;
            @Number_6.canceled -= instance.OnNumber_6;
            @Number_5.started -= instance.OnNumber_5;
            @Number_5.performed -= instance.OnNumber_5;
            @Number_5.canceled -= instance.OnNumber_5;
            @Number_4.started -= instance.OnNumber_4;
            @Number_4.performed -= instance.OnNumber_4;
            @Number_4.canceled -= instance.OnNumber_4;
            @Number_3.started -= instance.OnNumber_3;
            @Number_3.performed -= instance.OnNumber_3;
            @Number_3.canceled -= instance.OnNumber_3;
            @Q.started -= instance.OnQ;
            @Q.performed -= instance.OnQ;
            @Q.canceled -= instance.OnQ;
            @W.started -= instance.OnW;
            @W.performed -= instance.OnW;
            @W.canceled -= instance.OnW;
        }

        public void RemoveCallbacks(IPuzzleActions instance)
        {
            if (m_Wrapper.m_PuzzleActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPuzzleActions instance)
        {
            foreach (var item in m_Wrapper.m_PuzzleActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PuzzleActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PuzzleActions @Puzzle => new PuzzleActions(this);
    public interface IPlayerActions
    {
        void OnInteract(InputAction.CallbackContext context);
        void OnTest(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnEscape(InputAction.CallbackContext context);
        void OnTorch(InputAction.CallbackContext context);
    }
    public interface IPuzzleActions
    {
        void OnNumber_1(InputAction.CallbackContext context);
        void OnNumber_2(InputAction.CallbackContext context);
        void OnNumber_0(InputAction.CallbackContext context);
        void OnNumber_9(InputAction.CallbackContext context);
        void OnNumber_8(InputAction.CallbackContext context);
        void OnNumber_7(InputAction.CallbackContext context);
        void OnNumber_6(InputAction.CallbackContext context);
        void OnNumber_5(InputAction.CallbackContext context);
        void OnNumber_4(InputAction.CallbackContext context);
        void OnNumber_3(InputAction.CallbackContext context);
        void OnQ(InputAction.CallbackContext context);
        void OnW(InputAction.CallbackContext context);
    }
}
